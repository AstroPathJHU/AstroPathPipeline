def GITHUB_TOKEN

node {
  withCredentials([string(credentialsId: 'astropath-github', variable: 'SECRET')]) {
    GITHUB_TOKEN = "${SECRET}"
  }
}

pipeline {
  agent {
    dockerfile {
      dir '.docker'
      additionalBuildArgs '--build-arg GITHUB_TOKEN="'+GITHUB_TOKEN+'"'
    }
  }

  environment {
    RUNNING_ON_JENKINS = "1"
    JENKINS_NO_GPU = "1"
    JENKINS_PARALLEL = "1"
    HOME = "/home/astropath"
    GITHUB_TOKEN = credentials('astropath-github')
  }

  stages {
        
    stage('ps module install') {
      steps {
        sh 'folder=$(basename $(pwd)); pwsh -File ./test/testpsimport.ps1'
      }
    }
    
    stage('run tests') {
      parallel {

        stage('ps utils') {
          steps {
            sh 'folder=$(basename $(pwd)); pwsh -File ./test/testpsutils.ps1'
          }
        }

        stage('ps shredxml') {
          steps {
            sh 'folder=$(basename $(pwd)); pwsh -File ./test/testpsshredxml.ps1'
          }
        }

        stage('ps meanimage') {
          steps {
            sh 'folder=$(basename $(pwd)); pwsh -File ./test/testpsmeanimage.ps1'
          }
        }

      }
    }
    stage('check that the repo is clean') {
      steps {
        //make sure normal execution doesn't make files that aren't ignored by .gitignore
        sh 'if ! [ -z "$(git status --porcelain)" ]; then echo "tests created uncommitted changes"; git status; git diff; git submodule foreach bash -c "git status; git diff"; exit 1; fi'
        sh 'chmod u-x $(find $(git ls-files) -maxdepth 0 -type f); git diff --exit-code || (echo "The above files ^^^^^^ are chmodded to +x.  This causes git status to show up as dirty on windows."; exit 1)'
        sh '''git submodule foreach bash -c 'chmod u-x $(find $(git ls-files) -maxdepth 0 -type f); git diff --exit-code || (echo "The above files ^^^^^^ are chmodded to +x.  This causes git status to show up as dirty on windows. Run chmod a-x on those files to fix this error."; exit 1)\''''
        sh '! find test/test_for_jenkins -type f | grep . || (echo "expected the test_for_jenkins folder to be empty when tests succeed (feel free to modify this check if you want to keep output files from successful tests)"; exit 1)'
      }
    }
  }
  post {
    always {
      archiveArtifacts artifacts: 'documents/alignment/alignment.pdf', fingerprint: true
      archiveArtifacts artifacts: 'documents/annowarp/annowarp.pdf', fingerprint: true
      archiveArtifacts artifacts: 'documents/flatfield/flatfield_documentation.pdf', fingerprint: true
      archiveArtifacts artifacts: 'test/test_for_jenkins/**', fingerprint: true, allowEmptyArchive: true
    }
  }
}
