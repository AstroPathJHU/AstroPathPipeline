pipeline {
  agent {
    docker { image 'astropathjhu/alignmenttest:v5' }
  }

  environment {
    TEST_DATA_REPONAME = "alignmentjenkinsdata"
    TEST_DATA_REPO = "git@github.com:astropathjhu/${TEST_DATA_REPONAME}"
    TEST_DATA_COMMIT = "3204f0035097d32f84d1f2d886231fafaf4ac250"
    JENKINS_NO_GPU = "1"
  }

  stages {
    stage('get test data and dependencies') {
      steps {
        checkout([
          $class: 'GitSCM',
          branches: [[name: '**']],
          doGenerateSubmoduleConfigurations: false,
          extensions: [[
            $class: 'RelativeTargetDirectory',
            relativeTargetDir: 'test/data'
          ]],
          submoduleCfg: [],
          userRemoteConfigs: [[
            credentialsId: 'astropath-github-password',
            url: 'https://github.com/astropathjhu/alignmentjenkinsdata'
          ]]
        ])
        sh "cd test/data; git clean -fxd; git checkout ${TEST_DATA_COMMIT}"
      }
    }

    stage('run tests') {
      parallel {
        stage('test alignment') {
          steps {
            sh 'folder=$(basename $(pwd)); cd ..; python -m unittest ${folder}.test.testalignment'
          }
        }

        stage('test warping') {
          steps {
            sh 'folder=$(basename $(pwd)); cd ..; python -m ${folder}.test.testwarping'
            sh 'folder=$(basename $(pwd)); cd ..; python -m ${folder}.test.testwarpfitter'
          }
        }
      }
    }

    stage('build documentation') {
      parallel {
        stage('alignment documentation') {
          steps {
              sh 'folder=$(basename $(pwd)); cd ..; python -m ${folder}.documentation.alignment.makeplots'
              sh 'cd documentation/alignment; pdflatex alignment_stitching.tex; pdflatex alignment_stitching.tex; pdflatex alignment_stitching.tex'
              sh 'folder=$(basename $(pwd)); cd ..; python -m ${folder}.documentation.checklog ${folder}/documentation/alignment/alignment_stitching.log'
          }
        }
      }
    }

    stage('code checks') {
      steps {
        sh 'python -m pyflakes .'
      }
    }
  }
  post {
    always {
      archiveArtifacts artifacts: 'documentation/alignment/alignment_stitching.pdf', fingerprint: true
    }
  }
}
